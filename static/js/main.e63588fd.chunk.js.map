{"version":3,"sources":["componets/Header/Header.module.css","componets/Filter/Filter.module.css","componets/ContactListItem/ContactListItem.module.css","componets/Body/Body.module.css","componets/ContactList/ContactList.module.css","componets/ContactList/transitions/ContactLsTransition.module.css","redux/Contact/contactActions.js","redux/Contact/contactsReducer.js","redux/Contact/themeContactsReducer.js","redux/store.js","contex/ThemeContext.js","componets/Header/Header.js","componets/Body/Body.js","helpers/constants.js","componets/ContactForm/ContactForm.js","componets/Filter/Filter.js","componets/ContactListItem/ContactListItem.js","componets/ContactList/ContactList.js","componets/App.js","index.js","componets/ContactForm/ContactForm.module.css"],"names":["module","exports","addContacts","createAction","name","number","payload","items","id","uuidv4","addToLocalStrg","removeContacts","changeFilter","changeTheme","createReducer","action","state","filter","contact","combineReducers","theme","store","configureStore","reducer","contacts","contactsReducer","themePhonbk","themeContactsReducer","themeConfig","light","headerBg","fontColor","bodybg","dark","mDTP","toggleTheme","actions","connect","style","background","styleConxt","color","className","styles","theme_selector","label","switch","type","onChange","event","currentTarget","checked","slider","children","s","body","INITIAL_STATE_FORM","ContactForm","handleInputChange","target","value","setState","handleSubmit","e","props","onAddContacts","preventDefault","some","reset","alert","this","phoneBook_form","phoneBook_item","onSubmit","phoneBook_lb","phoneBook_inp","buttonPhonBk","Component","phone_filter","phone_filterInp","TaskListItem","onRemove","list_PhoneLs","buttonPhoneLs","onClick","ownProps","item","find","dispatch","defaultProps","normalizedFilter","toLowerCase","includes","Contact_list","TransitionGroup","component","map","CSSTransition","key","timeout","classNames","transition","ContactListItem","App","localStoregeContacts","localStorage","getItem","onAddToLS","JSON","parse","prevProps","prevState","setItem","stringify","showContacts","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e63588fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"theme_selector\":\"Header_theme_selector__PQfAN\",\"label\":\"Header_label__1UJfb\",\"switch\":\"Header_switch__2EEfe\",\"slider\":\"Header_slider__2CRFT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phone_filter\":\"Filter_phone_filter__1Ysls\",\"phone_filterInp\":\"Filter_phone_filterInp__1ojjO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_PhoneLs\":\"ContactListItem_list_PhoneLs__19Uxv\",\"buttonPhoneLs\":\"ContactListItem_buttonPhoneLs__13AIp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Body_body__3Ka90\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact_list\":\"ContactList_Contact_list__3jUq_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactLsTransition_enter__32UPv\",\"enterActive\":\"ContactLsTransition_enterActive__1Tg_4\",\"exit\":\"ContactLsTransition_exit__vzLmM\",\"exitActive\":\"ContactLsTransition_exitActive__2lQZ7\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContacts = createAction('contact/addContacts', ({ name, number }) => ({\r\n  payload: { items: { id: uuidv4(), name, number } },\r\n}));\r\n\r\nconst addToLocalStrg = createAction('contact/addToLocalStorage');\r\n\r\nconst removeContacts = createAction('contact/removeContacts');\r\n\r\nconst changeFilter = createAction('contact/changeFilter');\r\n\r\nconst changeTheme = createAction('contact/changeTheme');\r\n\r\nexport default {\r\n  addContacts,\r\n  removeContacts,\r\n  changeFilter,\r\n  changeTheme,\r\n  addToLocalStrg,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport action from './contactActions';\r\n\r\nconst addContacts = (state, action) => [...state, action.payload.items];\r\n\r\nconst removeContacts = (state, action) =>\r\n  state.filter(contact => contact.id !== action.payload);\r\n\r\nconst addToLocalStrg = (state, action) => [...action.payload];\r\n\r\nconst onFilter = (state, action) => action.payload;\r\n\r\nconst items = createReducer([], {\r\n  [action.addContacts]: addContacts,\r\n  [action.removeContacts]: removeContacts,\r\n  [action.addToLocalStrg]: addToLocalStrg,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [action.changeFilter]: onFilter,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport action from './contactActions';\r\n\r\nconst onchangeTheme = (state, action) => (action.payload ? 'dark' : 'light');\r\n\r\nconst theme = createReducer('light', {\r\n  [action.changeTheme]: onchangeTheme,\r\n});\r\n\r\nexport default combineReducers({\r\n  theme,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './Contact/contactsReducer';\r\nimport themeContactsReducer from './Contact/themeContactsReducer';\r\n\r\nconst store = configureStore({\r\n  reducer: { contacts: contactsReducer, themePhonbk: themeContactsReducer },\r\n});\r\n\r\nexport default store;\r\n","export const themeConfig = {\r\n  light: {\r\n    headerBg: '#d2e0e3',\r\n    fontColor: '#2a5c69',\r\n    bodybg: '#9ab7ba',\r\n  },\r\n  dark: {\r\n    headerBg: '#3c3c3c',\r\n    fontColor: 'white',\r\n    bodybg: 'black',\r\n  },\r\n};\r\n\r\nexport default themeConfig;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport actions from '../../redux/Contact/contactActions';\r\n\r\nimport styleConxt from '../../contex/ThemeContext';\r\n\r\nimport styles from './Header.module.css';\r\n\r\nconst Header = ({ theme, toggleTheme }) => (\r\n  <header\r\n    style={{\r\n      background: styleConxt[theme].headerBg,\r\n      color: styleConxt[theme].fontColor,\r\n    }}\r\n  >\r\n    <div className={styles.theme_selector}>\r\n      <span className={styles.label}>\r\n        Toggle theme: {''}\r\n        {theme}\r\n      </span>\r\n      <label className={styles.switch}>\r\n        <input\r\n          type=\"checkbox\"\r\n          onChange={event => toggleTheme(event.currentTarget.checked)}\r\n        />\r\n        <span className={styles.slider}></span>\r\n      </label>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nconst mDTP = { toggleTheme: actions.changeTheme };\r\nconst mSTP = state => ({ theme: state.themePhonbk.theme });\r\n\r\nexport default connect(mSTP, mDTP)(Header);\r\n","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport styleConxt from '../../contex/ThemeContext';\r\nimport s from './Body.module.css';\r\nconst Body = ({ theme, children }) => (\r\n  <div\r\n    className={s.body}\r\n    style={{\r\n      color: styleConxt[theme].fontColor,\r\n      background: styleConxt[theme].bodybg,\r\n    }}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nconst mSTP = state => ({ theme: state.themePhonbk.theme });\r\n\r\nexport default connect(mSTP, null)(Body);\r\n","const INITIAL_STATE_FORM = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nexport { INITIAL_STATE_FORM };\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { INITIAL_STATE_FORM } from '../../helpers/constants';\r\n\r\nimport actions from '../../redux/Contact/contactActions';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    ...INITIAL_STATE_FORM,\r\n  };\r\n\r\n  handleInputChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { contacts, onAddContacts } = this.props;\r\n    const { name } = this.state;\r\n    e.preventDefault();\r\n\r\n    const overlap = contacts.some(contacts => contacts.name === name);\r\n    if (!overlap) {\r\n      this.reset();\r\n      return onAddContacts({ ...this.state });\r\n    } else alert(`${name} is already in contacts`);\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE_FORM });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <div className={s.phoneBook_form}>\r\n        <h2 className={s.phoneBook_item}>Phonebook</h2>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label className={s.phoneBook_lb}>\r\n            Name\r\n            <input\r\n              className={s.phoneBook_inp}\r\n              type=\"text\"\r\n              value={name}\r\n              name=\"name\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </label>\r\n          <label className={s.phoneBook_lb}>\r\n            Number\r\n            <input\r\n              className={s.phoneBook_inp}\r\n              type=\"tel\"\r\n              value={number}\r\n              name=\"number\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={s.buttonPhonBk}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mDTP = { onAddContacts: actions.addContacts };\r\nconst mSTP = state => ({ contacts: state.contacts.items });\r\n\r\nexport default connect(mSTP, mDTP)(ContactForm);\r\n\r\nContactForm.propTypes = {\r\n  onRemove: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport actions from '../../redux/Contact/contactActions';\r\n\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, onChange }) => (\r\n  <div className={s.phone_filter}>\r\n    <h3>Find my contacts</h3>\r\n    <input\r\n      type=\"text\"\r\n      className={s.phone_filterInp}\r\n      value={filter}\r\n      onChange={e => onChange(e.target.value)}\r\n    />\r\n  </div>\r\n);\r\n\r\nconst mSTP = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mDTP = {\r\n  onChange: actions.changeFilter,\r\n};\r\n\r\nexport default connect(mSTP, mDTP)(Filter);\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport action from '../../redux/Contact/contactActions';\r\n\r\nimport styleConxt from '../../contex/ThemeContext';\r\n\r\nimport s from './ContactListItem.module.css';\r\n\r\nconst TaskListItem = ({ theme, name, number, onRemove = () => null }) => (\r\n  <li\r\n    className={s.list_PhoneLs}\r\n    style={{\r\n      color: styleConxt[theme].fontColor,\r\n      background: styleConxt[theme].bodybg,\r\n    }}\r\n  >\r\n    <p>\r\n      {name}:{number}\r\n    </p>\r\n\r\n    <button type=\"button\" className={s.buttonPhoneLs} onClick={onRemove}>\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nconst mSTP = (state, ownProps) => {\r\n  const item = state.contacts.items.find(item => item.id === ownProps.id);\r\n  const theme = state.themePhonbk.theme;\r\n\r\n  return { theme, ...item };\r\n};\r\n\r\nconst mDTP = (dispatch, ownProps) => ({\r\n  onRemove: () => dispatch(action.removeContacts(ownProps.id)),\r\n});\r\n\r\nexport default connect(mSTP, mDTP)(TaskListItem);\r\n\r\nTaskListItem.defaultProps = {\r\n  contacts: [],\r\n};\r\n\r\nTaskListItem.propTypes = {\r\n  onRemove: PropTypes.func,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nimport actions from '../../redux/Contact/contactActions';\r\n\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\n\r\nimport styleConxt from '../../contex/ThemeContext';\r\n\r\nimport s from './ContactList.module.css';\r\nimport transition from '../ContactList/transitions/ContactLsTransition.module.css';\r\n\r\nconst ContactList = ({ contacts, theme }) => (\r\n  <div\r\n    className={s.Contact_list}\r\n    style={{\r\n      color: styleConxt[theme].fontColor,\r\n      background: styleConxt[theme].bodybg,\r\n    }}\r\n  >\r\n    <h2>Contacts</h2>\r\n    <TransitionGroup component=\"ul\">\r\n      {contacts.map(({ id }) => (\r\n        <CSSTransition key={id} timeout={200} classNames={transition}>\r\n          <ContactListItem key={id} id={id} />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  </div>\r\n);\r\n\r\nconst mSTP = state => {\r\n  const { items, filter } = state.contacts;\r\n  const normalizedFilter = filter.toLowerCase();\r\n  const theme = state.themePhonbk.theme;\r\n  const visibleTasks = items.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n\r\n  return {\r\n    contacts: visibleTasks,\r\n    theme,\r\n  };\r\n};\r\n\r\nconst mDTP = {\r\n  onRemove: actions.removeContacts,\r\n};\r\n\r\nexport default connect(mSTP, mDTP)(ContactList);\r\n\r\nContactList.propTypes = {\r\n  onRemove: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.node,\r\n    }),\r\n  ).isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../redux/Contact/contactActions';\r\n\r\nimport Header from './Header/Header';\r\nimport Body from './Body/Body';\r\nimport ContactListForm from './ContactForm/ContactForm';\r\nimport Filter from './Filter/Filter';\r\nimport ContactList from './ContactList/ContactList';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    const localStoregeContacts = localStorage.getItem('contacts');\r\n    const { onAddToLS } = this.props;\r\n    if (localStoregeContacts) {\r\n      onAddToLS(JSON.parse(localStoregeContacts));\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { contacts } = this.props;\r\n    if (contacts !== prevProps.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const showContacts = this.props.contacts.length;\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Body>\r\n          <ContactListForm />\r\n          {showContacts > 1 && <Filter />}\r\n          <ContactList />\r\n        </Body>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mDTP = { onAddToLS: actions.addToLocalStrg };\r\nconst mSTP = state => ({ contacts: state.contacts.items });\r\n\r\nexport default connect(mSTP, mDTP)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nimport App from './componets/App';\r\n\r\nimport './base.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneBook_form\":\"ContactForm_phoneBook_form__2FUp5\",\"phoneBook_item\":\"ContactForm_phoneBook_item__3HU9Q\",\"buttonPhonBk\":\"ContactForm_buttonPhonBk__1VXI7\",\"phoneBook_inp\":\"ContactForm_phoneBook_inp__3FwWA\"};"],"sourceRoot":""}